{"version":3,"sources":["hooks/usePersistedState.ts","styles/themes/DarkTheme.ts","styles/themes/LightTheme.ts","context/ThemeContext.tsx","services/api.ts","assets/Logo.svg","pages/Dashboard/styles.ts","components/Switch/styles.ts","components/Switch/index.tsx","pages/Dashboard/index.tsx","pages/Repository/styles.ts","pages/Repository/index.tsx","routes/index.tsx","assets/Github-dark.svg","styles/global.ts","App.tsx","index.tsx"],"names":["usePersistedState","key","initialState","useState","storageValue","localStorage","getItem","JSON","parse","state","setState","useEffect","setItem","stringify","title","colors","box","background","text","ThemeContext","createContext","ThemeProvider","children","LightTheme","theme","setTheme","Provider","value","toggleTheme","DarkTheme","api","axios","create","baseURL","Title","styled","h1","props","Form","form","hasError","css","shade","Error","span","Repositories","div","Container","SwitchTheme","Switch","useContext","ThemeContextProps","size","checked","height","width","onChange","onColor","offColor","checkedIcon","uncheckedIcon","handleDiameter","Dashboard","newRepo","setNewRepo","inputError","setInputError","storageRepositories","repositories","setRepositories","event","a","preventDefault","get","response","repository","data","src","logoImg","alt","onSubmit","placeholder","e","target","type","map","to","full_name","owner","avatar_url","login","description","Header","header","RepositoryInfo","section","Issues","Repository","setRepository","issues","setIssues","params","useRouteMatch","then","stargazers_count","forks_count","open_issues_count","issue","href","html_url","user","id","Routes","path","exact","component","createGlobalStyle","GithubBackgroundDark","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b615250f.chunk.js","sourcesContent":["import { useState, useEffect, Dispatch, SetStateAction } from 'react';\n\ntype Response<T> = [T, Dispatch<SetStateAction<T>>];\n\nfunction usePersistedState<T>(key: string, initialState: T): Response<T> {\n  const [state, setState] = useState(() => {\n    const storageValue = localStorage.getItem(key);\n\n    if (storageValue) {\n      return JSON.parse(storageValue);\n    }\n    return initialState;\n  });\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n}\n\nexport default usePersistedState;\n","export default {\n  title: 'dark',\n\n  colors: {\n    box: '#6272a4',\n    background: '#282a36',\n    text: '#fff',\n    title: '#f8f8f2',\n  },\n};\n","export default {\n  title: 'light',\n\n  colors: {\n    box: '#fff',\n    background: '#f0f0f5',\n    text: '#a8a8b3',\n    title: '#3a3a3a',\n  },\n};\n","import React, { createContext, ReactNode } from 'react';\nimport {\n  DefaultTheme,\n  ThemeProvider as StyledComponentThemeProvider,\n} from 'styled-components';\nimport usePersistedState from '../hooks/usePersistedState';\n\nimport DarkTheme from '../styles/themes/DarkTheme';\nimport LightTheme from '../styles/themes/LightTheme';\n\ninterface ThemeContextData {\n  toggleTheme: () => void;\n}\n\ninterface ThemeContextProviderProps {\n  children: ReactNode;\n}\n\nexport const ThemeContext = createContext({} as ThemeContextData);\n\nexport function ThemeProvider({ children }: ThemeContextProviderProps) {\n  const [theme, setTheme] = usePersistedState<DefaultTheme>(\n    '@GithubExplorer:theme',\n    LightTheme,\n  );\n\n  function toggleTheme() {\n    setTheme(theme.title === 'light' ? DarkTheme : LightTheme);\n  }\n\n  return (\n    <ThemeContext.Provider\n      value={{\n        toggleTheme,\n      }}\n    >\n      <StyledComponentThemeProvider theme={theme}>\n        {children}\n      </StyledComponentThemeProvider>\n    </ThemeContext.Provider>\n  );\n}\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.github.com/',\n});\n\nexport default api;\n","export default __webpack_public_path__ + \"static/media/Logo.469cc31b.svg\";","import { shade } from 'polished';\nimport styled, { css } from 'styled-components';\n\ninterface FormProps {\n  hasError: Boolean;\n}\n\nexport const Title = styled.h1`\n  font-size: 48px;\n  color: ${props => props.theme.colors.title};\n  max-width: 450px;\n  line-height: 56px;\n\n  margin-top: 80px;\n`;\n\nexport const Form = styled.form<FormProps>`\n  margin-top: 40px;\n  max-width: 700px;\n\n  display: flex;\n\n  input {\n    flex: 1;\n    height: 70px;\n    padding: 0 24px;\n    background: ${props => props.theme.colors.box};\n    border: 0;\n    border-radius: 5px 0px 0px 5px;\n    color: ${props => props.theme.colors.text};\n    border: 2px solid ${props => props.theme.colors.box};\n    border-right: 0;\n\n    ${props =>\n      props.hasError &&\n      css`\n        border-color: #c53030;\n      `}\n\n    &::placeholder {\n      color: #a8a8b3;\n    }\n  }\n\n  button {\n    width: 210px;\n    height: 70px;\n    border: 0;\n    background: #04d361;\n    border-radius: 0px 5px 5px 0px;\n    color: #fff;\n    font-weight: bold;\n    transition: background-color 0.2s;\n\n    &:hover {\n      background: ${shade(0.2, '#04d361')};\n    }\n  }\n`;\n\nexport const Error = styled.span`\n  display: block;\n  color: #c53030;\n  margin-top: 8px;\n`;\n\nexport const Repositories = styled.div`\n  margin-top: 80px;\n  max-width: 700px;\n\n  a {\n    background: ${props => props.theme.colors.box};\n    border-radius: 5px;\n    width: 100%;\n    padding: 24px;\n    display: block;\n    text-decoration: none;\n\n    display: flex;\n    align-items: center;\n    transition: transform 0.2s;\n\n    & + a {\n      margin-top: 16px;\n    }\n\n    &:hover {\n      transform: translateX(10px);\n    }\n\n    img {\n      width: 64px;\n      height: 64px;\n      border-radius: 50%;\n    }\n\n    div {\n      margin: 0 16px;\n      flex: 1;\n\n      strong {\n        font-size: 20px;\n        color: ${props => props.theme.colors.title};\n      }\n\n      p {\n        font-size: 18px;\n        color: ${props => props.theme.colors.text};\n        margin-top: 4px;\n      }\n    }\n    svg {\n      margin-left: auto;\n      color: #cbcbd6;\n    }\n  }\n`;\n","import styled from 'styled-components';\nimport Switch from 'react-switch';\n\nexport const Container = styled.div`\n  position: fixed;\n  display: flex;\n  right: 0;\n  bottom: 100%;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 6.5rem;\n  top: 30px;\n`;\n\nexport const SwitchTheme = styled(Switch)`\n  margin-right: 1.25rem;\n`;\n","import React, { useContext } from 'react';\nimport { RiSunLine } from 'react-icons/ri';\nimport { BiMoon } from 'react-icons/bi';\nimport { ThemeContext as ThemeContextProps } from 'styled-components';\nimport { ThemeContext } from '../../context/ThemeContext';\n\nimport { Container, SwitchTheme } from './styles';\n\nexport function Switch() {\n  const { toggleTheme } = useContext(ThemeContext);\n  const { title } = useContext(ThemeContextProps);\n\n  return (\n    <Container>\n      {title === 'dark' ? <BiMoon size={20} /> : <RiSunLine size={20} />}\n\n      <SwitchTheme\n        checked={title === 'dark'}\n        height={20}\n        width={40}\n        onChange={toggleTheme}\n        onColor=\"#50fa7b\"\n        offColor=\"#44475a\"\n        checkedIcon={false}\n        uncheckedIcon={false}\n        handleDiameter={20}\n      />\n    </Container>\n  );\n}\n","import React, { FormEvent, useEffect, useState } from 'react';\nimport { FiChevronRight } from 'react-icons/fi';\nimport { Link } from 'react-router-dom';\nimport api from '../../services/api';\n\nimport logoImg from '../../assets/Logo.svg';\n\nimport { Title, Form, Repositories, Error } from './styles';\nimport { Switch } from '../../components/Switch';\n\ninterface Repository {\n  full_name: string;\n  description: string;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\nexport function Dashboard() {\n  const [newRepo, setNewRepo] = useState('');\n  const [inputError, setInputError] = useState('');\n\n  const [repositories, setRepositories] = useState<Repository[]>(() => {\n    const storageRepositories = localStorage.getItem(\n      '@GithubExplorer:repositories',\n    );\n\n    if (storageRepositories) {\n      return JSON.parse(storageRepositories);\n    }\n\n    return [];\n  });\n\n  useEffect(() => {\n    localStorage.setItem(\n      '@GithubExplorer:repositories',\n      JSON.stringify(repositories),\n    );\n  }, [repositories]);\n\n  async function handleAddRepository(\n    event: FormEvent<HTMLFormElement>,\n  ): Promise<void> {\n    event.preventDefault();\n\n    if (!newRepo) {\n      setInputError('Digite o autor/nome do repositorio');\n      return;\n    }\n\n    try {\n      const response = await api.get<Repository>(`repos/${newRepo}`);\n\n      const repository = response.data;\n\n      setRepositories([...repositories, repository]);\n      setNewRepo('');\n      setInputError('');\n    } catch {\n      setInputError('Erro na busca por esse repositorio');\n    }\n  }\n\n  return (\n    <>\n      <Switch />\n\n      <img src={logoImg} alt=\"Github Explorer\" />\n      <Title>Explore repositórios no Github.</Title>\n\n      <Form hasError={!!inputError} onSubmit={handleAddRepository}>\n        <input\n          placeholder=\"Digite aqui\"\n          onChange={e => setNewRepo(e.target.value)}\n          value={newRepo}\n        />\n        <button type=\"submit\">Pesquisar</button>\n      </Form>\n\n      {inputError && <Error>{inputError}</Error>}\n\n      <Repositories>\n        {repositories.map(repository => (\n          <Link\n            key={repository.full_name}\n            to={`/repositories/${repository.full_name}`}\n          >\n            <img\n              src={repository.owner.avatar_url}\n              alt={repository.owner.login}\n            />\n            <div>\n              <strong>{repository.full_name}</strong>\n              <p>{repository.description}</p>\n            </div>\n\n            <FiChevronRight size={20} />\n          </Link>\n        ))}\n      </Repositories>\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Header = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  a {\n    display: flex;\n    align-items: center;\n    text-decoration: none;\n    color: #a8a8b3;\n    transition: color 0.2s;\n\n    &:hover {\n      color: #666;\n    }\n\n    svg {\n      margin-right: 4px;\n    }\n  }\n`;\n\nexport const RepositoryInfo = styled.section`\n  margin-top: 80px;\n\n  header {\n    display: flex;\n    align-items: center;\n\n    img {\n      width: 120px;\n      height: 120px;\n      border-radius: 50%;\n    }\n\n    div {\n      margin-left: 24px;\n\n      strong {\n        font-size: 36px;\n        color: ${props => props.theme.colors.title};\n      }\n\n      p {\n        font-size: 18px;\n        color: ${props => props.theme.colors.text};\n        margin-top: 4px;\n      }\n    }\n  }\n\n  ul {\n    display: flex;\n    list-style: none;\n    margin-top: 40px;\n\n    li {\n      & + li {\n        margin-left: 80px;\n      }\n\n      strong {\n        display: block;\n        font-size: 36px;\n\n        color: ${props => props.theme.colors.title};\n      }\n\n      span {\n        display: block;\n        margin-top: 4px;\n        color: ${props => props.theme.colors.text};\n      }\n    }\n  }\n`;\n\nexport const Issues = styled.div`\n  margin-top: 80px;\n\n  a {\n    background: ${props => props.theme.colors.box};\n    border-radius: 5px;\n    width: 100%;\n    padding: 24px;\n    display: block;\n    text-decoration: none;\n\n    display: flex;\n    align-items: center;\n    transition: transform 0.2s;\n\n    & + a {\n      margin-top: 16px;\n    }\n\n    &:hover {\n      transform: translateX(10px);\n    }\n\n    div {\n      margin: 0 16px;\n      flex: 1;\n\n      strong {\n        font-size: 20px;\n        color: ${props => props.theme.colors.title};\n      }\n\n      p {\n        font-size: 18px;\n        color: ${props => props.theme.colors.text};\n        margin-top: 4px;\n      }\n    }\n    svg {\n      margin-left: auto;\n      color: #cbcbd6;\n    }\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { FiChevronLeft, FiChevronRight } from 'react-icons/fi';\nimport { Link, useRouteMatch } from 'react-router-dom';\n\nimport logoImg from '../../assets/Logo.svg';\nimport api from '../../services/api';\n\nimport { Header, Issues, RepositoryInfo } from './styles';\n\ninterface RepositoryParams {\n  repository: string;\n}\n\ninterface RepositoryProps {\n  full_name: string;\n  description: string;\n  stargazers_count: number;\n  forks_count: number;\n  open_issues_count: number;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\ninterface Issue {\n  id: number;\n  title: string;\n  html_url: string;\n  user: {\n    login: string;\n  };\n}\n\nexport function Repository() {\n  const [repository, setRepository] = useState<RepositoryProps | null>(null);\n  const [issues, setIssues] = useState<Issue[]>([]);\n\n  const { params } = useRouteMatch<RepositoryParams>();\n\n  useEffect(() => {\n    api.get(`repos/${params.repository}`).then(response => {\n      setRepository(response.data);\n    });\n\n    api.get(`repos/${params.repository}/issues`).then(response => {\n      setIssues(response.data);\n    });\n  }, [params.repository]);\n\n  return (\n    <>\n      <Header>\n        <img src={logoImg} alt=\"Github Explorer\" />\n\n        <Link to=\"/\">\n          <FiChevronLeft size={16} />\n          voltar\n        </Link>\n      </Header>\n\n      {repository && (\n        <RepositoryInfo>\n          <header>\n            <img\n              src={repository.owner.avatar_url}\n              alt={repository.owner.login}\n            />\n            <div>\n              <strong>{repository.full_name}</strong>\n              <p>{repository.description}</p>\n            </div>\n          </header>\n          <ul>\n            <li>\n              <strong>{repository.stargazers_count}</strong>\n              <span>Stars</span>\n            </li>\n            <li>\n              <strong>{repository.forks_count}</strong>\n              <span>Forks</span>\n            </li>\n            <li>\n              <strong>{repository.open_issues_count}</strong>\n              <span>Issues abertas</span>\n            </li>\n          </ul>\n        </RepositoryInfo>\n      )}\n\n      <Issues>\n        {issues.map(issue => (\n          <a key={issue.id} href={issue.html_url}>\n            <div>\n              <strong>{issue.title}</strong>\n              <p>{issue.user.login}</p>\n            </div>\n\n            <FiChevronRight size={20} />\n          </a>\n        ))}\n      </Issues>\n    </>\n  );\n}\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport { Dashboard } from '../pages/Dashboard';\nimport { Repository } from '../pages/Repository';\n\nexport default function Routes() {\n  return (\n    <Switch>\n      <Route path=\"/\" exact component={Dashboard} />\n      <Route path=\"/repositories/:repository+\" component={Repository} />\n    </Switch>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/Github-dark.d09abf44.svg\";","import { createGlobalStyle } from 'styled-components';\n\nimport GithubBackgroundDark from '../assets/Github-dark.svg';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    background: ${props =>\n      props.theme.colors\n        .background} url(${GithubBackgroundDark}) no-repeat 70% top;\n    --web-kit-font-smooth: antialiased;\n  }\n\n  body, input, button {\n    font: 16px Roboto, sans-serif;\n  }\n\n  #root {\n    max-width: 960px;\n    margin: 0 auto;\n    padding: 40px 20px;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ThemeProvider } from './context/ThemeContext';\nimport Routes from './routes';\n\nimport GlobalStyle from './styles/global';\n\nexport default function App() {\n  return (\n    <ThemeProvider>\n      <GlobalStyle />\n      <BrowserRouter>\n        <Routes />\n      </BrowserRouter>\n    </ThemeProvider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}